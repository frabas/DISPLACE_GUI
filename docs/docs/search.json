[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DISPLACE documentation",
    "section": "",
    "text": "Introduction\nDISPLACE is an agent-based, spatially explicit bioeconomic modeling framework that represents individual fishing vessels as agents whose behavior is influenced by historical fishing behavior and spatial resource availability. The model captures how vessels adjust their fishing activity (i.e., when, where, what, and how to fish) in response to spatial, temporal, management, and economic constraints. The spatial domain of the model is represented by a network of nodes, where the extent is based on historical fishing locations. The model integrates three main modules (i.e., biological, fleet, and economic), which can be customized based on data availability. DISPLACE relies on fisheries-dependent data such as Vessel Monitoring Systems (VMS) and landing receipts to guide spatial fishing patterns, catch, and effort, resulting in realistic simulations of fishing behavior. The biological module includes species-specific life history traits and population dynamics, while the fleet and economic modules include vessel-specific characteristics (e.g., size, gear, fuel capacity) and economic parameters (e.g., fuel prices, ex-vessel values, labor costs). DISPLACE has the ability to model the redistribution of fishing effort at various disaggregated levels—from individual vessels to individual ports or individual gears— allowing for the assessment of distributional impacts of OSW development (Bastardie, Nielsen, and Miethe (2014)).\nUCSB used DISPLACE to evaluate the potential impacts of California’s Offshore Wind energy development lease areas on the DTS fisheries operating off the coast of California. This notebook summarizes the requirements, inputs, outputs, and processes for running DISPLACE and the associated R routines. Separate documentation about DISPLACE can be found on the project website.\nThis repository includes an application example based on this Californian study. It does not use actual vessel or fisheries data, but rather example data that do not reflect any confidential fishing information. This allows for a complete test run of the parametrization and model, and provides an opportunity to become familiar with the processes and different model components.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "index.html#working-environment",
    "href": "index.html#working-environment",
    "title": "DISPLACE documentation",
    "section": "Working environment",
    "text": "Working environment\nThe current project uses DISPLACE version 1.3.5 on Windows 11. You can download the installer here. The R routines run on R version 4.5.0 (on any platform or operating system). All required R packages are detailed in r/config.R.\nThe repository contains all the scripts required to prepare input data in the DISPLACE format, along with scripts for basic processing of outputs in the r and routines folders. It also includes example data in the raw_inputs folder, which serve as reference for data contents and structure when building a DISPLACE application.\nThe processed_inputs folder is initially empty and is automatically populated when running the routines with r/functions_routines.R. To explore DISPLACE results, you will need to manually move the model output files into the outputs folder so they can be read by r/functions_outputs.R.\nDISPLACE_California\n  |__ docs\n  |__ qmd\n  |__ raw_inputs\n  |__ processed_inputs\n  |__ outputs\n  |__ routines\n  |__ r",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "index.html#quick-setup-run",
    "href": "index.html#quick-setup-run",
    "title": "DISPLACE documentation",
    "section": "Quick Setup & Run",
    "text": "Quick Setup & Run\nFor a quick execution and model run to test whether it can run on your machine, execute:\n\nsource(here::here(\"r/functions_routines.R\"))\n\nBefore executing, make sure to update the installer directory in the directory parameter of the generate_dis_run_files function in functions_routines.R. Running this script will populate the processed_inputs folder, whose contents then need to be moved to the machine where DISPLACE is run. This must be a Windows machine, and the inputs must be located in C:/. You should also create a folder named DISPLACE_outputs in C:/, where the outputs will be stored.\nWe recommend reviewing the entire repository to understand the inputs and processes in more detail before executing.\n\n\n\n\nBastardie, Francois, J Rasmus Nielsen, and Tanja Miethe. 2014. “DISPLACE: A Dynamic, Individual-Based Model for Spatial Fishing Planning and Effort Displacement—Integrating Underlying Fish Population Models.” Canadian Journal of Fisheries and Aquatic Sciences 71 (3): 366–86.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "routines.html",
    "href": "routines.html",
    "title": "1  R routines",
    "section": "",
    "text": "DISPLACE requires input files in a specific format for the modeling framework to read them correctly. The previous sections described the contents and structure of the raw inputs, which must then be transformed to meet these requirements. In this section, we walk through the R routines needed to adapt the inputs.\nThe required DISPLACE inputs depend on the type of analysis being performed and the model modules being used. While other DISPLACE applications make use of additional routines to prepare such inputs (see the complete routines repository from François et al.), here we only include those relevant to our case study. These are divided into two main groups: routines for preparing data for the populations model and routines for preparing data for the fleet model. Additional routines are included to prepare the remaining data needed to run DISPLACE.\nIn this repository, the routines are located in the routines folder, and the code to execute them sequentially can be found in r/functions_routines.R. Here we use R 4.5.0, and the packages included in r/config.R. Be aware that as describerd in some of the previous sections, some model inputs are hardcoded within this routines, so modify the code as needed for your case study.\nRoutines for the population inputs located in raw_inputs/POPULATIONS are:\n\n01_GeneratePopulationsFeatures.R\n\n02_GeneratePopulationsConfigFiles.R\n\n03_RunPopulationsConfigFiles.R\n\n04_GeneratePopulationsPreferencesPerSpeciesMatrix.R\n\n05_GeneratePopulationsVariousFiles.R\n\nRoutines for the fleet inputs in raw_inputs/FISHERIES are:\n\n06_GenerateVesselsConfigFiles.R\n\n07_RunVesselsConfigFiles.R\n\n08_GenerateVesselsEconomicsFile.R\n\n09_GenerateOtherCatchesOnNodes.R\n\n10_GenerateMetiersSelectivityPerStockFiles.R\n\n11_GenerateMetiersVariousFiles.R\n\nThe routine 09_GenerateOtherCatchesOnNodes.R assigns additional fixed catches to the nodes beyond those of our modeled fleet. For instance, if other nations or fleets not explicitly characterized in the model exert fishing pressure on the populations defined in the analysis, the catch from these can be indicated in the file OTHER/othercatchespercountry.csv as fixed removals (in tonnes per year). While recruits are proportionally assigned based on coverage and density from SDM inputs, this routine assigns other catches evenly across the species’ coverage area, without accounting for species density. The routine can, however, be updated to weight other catches according to species distribution.\nAdditional routines required to run DISPLACE are:\n\n12_GenerateHarboursFiles.R: Prepares harbour files, including stock prices and fuel prices. Currently, the routine assigns the same prices across all ports, but it can be updated to reflect port-specific prices.\n13_GenerateShippingFiles.R: Although we do not use this module (which models traffic lanes used by other vessels that might influence fishing vessel behavior), DISPLACE still requires two files with dummy data in the raw_inputs/SHIPPING folder and corresponding processed inputs, so the model can run even without using this feature.\n14_GenerateFishfarmsFiles.R: Similarly, fish farm locations and features (defined by coordinates and size) can be included to condition vessel navigation and fishing. For this case study, we use dummy data in raw_inputs/FISHFARMS to allow DISPLACE to run, though this feature is not used in the analysis.\n15_GenerateWindmillsFiles.R: Allows input of specific turbine distributions or single turbine positions. Dummy data are included in raw_inputs/WINDMILLS for this case study.\n16_GenerateFirmsFiles.R: We do not use the firms feature. The input file in raw_inputs/FIRMS is populated with dummy data solely to satisfy DISPLACE requirements.\n17_GenerateSimulationsConfigFiles.R: An important step, as it generates all files required to inform DISPLACE about the parameterization, characteristics, and inputs needed to execute a run. These files are stored in processed_inputs/simusspe_california_example after running all routines.\n18_GenerateBenthosLandscapeOnNodes.R: DISPLACE includes an optional benthic module designed to evaluate fishing impacts on benthic habitats. This module is deactivated in our project, and the file in raw_inputs/HABITATS is filled with dummy data solely to prevent DISPLACE from crashing.\n\nThe execution of r/functions_routines.R runs these routines sequentially and generates the contents of the processed_inputs folder (initially empty in this repository). To create its contents, simply execute this script.\n\nsource(here::here(\"r/functions_routines.R\"))\n\nIn addition to running the routines, functions_routines.R also:\n\nUpdates config.dat to indicate the implicitly defined species.\n\nUpdates the baseline.dat file to set the baseline scenario using the closer_port feature, ensuring vessels return to the closest port among those historically fished (as part of our case study parametrization; this may differ depending on the application of DISPLACE).\n\nThe script also includes the function generate_dis_run_files, which defines the .bat and .dsf files needed to run DISPLACE without using the GUI. This function allows the user to specify:\n\nThe base directory for outputs.\n\nThe scenario being run.\n\nThe replicate name\nThe number of replicates.\nThe number of years analyzed.\nThe number of years for which data are stored. By default, DISPLACE only saves 1 year of VMS-like data, but it can be set to save 7 or 10 years of simulated data.\n\nThe number of threads to run the model, depending on the machine’s cores.\n\nOnce all processed inputs are generated (this can be done in Windows, macOS, or Linux using R), DISPLACE can be run from a Windows machine either via the GUI or by double-clicking the generated .bat file.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>R routines</span>"
    ]
  }
]